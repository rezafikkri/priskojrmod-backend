// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// This schema is for priskojrmod_ecommerce database

generator client {
  provider      = "prisma-client-js"
  output        = "../prisma-pjme-db/pjme-db-client"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL_PJME")
  directUrl = env("DIRECT_URL_PJME")
}

model Admin {
  id                    String @id @db.VarChar(255)
  first_name            String @db.VarChar(100)
  last_name             String @db.VarChar(100)
  email                 String @unique @db.VarChar(100)
  whatsapp_phone_number String @db.VarChar(20)
  picture               String @db.VarChar(255)

  donation_links DonationLink[]
  products       Product[]

  @@map("admins")
}

enum CurrencyCode {
  IDR
  USD

  @@map("currency_code")
}

model DonationLink {
  id            Int          @id @default(autoincrement())
  admin_id      String       @db.VarChar(255)
  currency_code CurrencyCode
  link          String       @db.VarChar(100)

  admin Admin @relation(fields: [admin_id], references: [id], onDelete: Cascade)

  @@map("donation_links")
}

model Owner {
  id          Int    @id @default(autoincrement())
  first_name  String @db.VarChar(100)
  last_name   String @db.VarChar(100)
  sm_username String @db.VarChar(100)
  picture     String @db.VarChar(255)

  products Product[]

  @@map("owners")
}

model Customer {
  id           String  @id @db.VarChar(255)
  first_name   String  @db.VarChar(100)
  last_name    String  @db.VarChar(100)
  email        String  @unique @db.VarChar(100)
  password     String? @db.VarChar(100)
  phone_number String? @db.VarChar(20)
  picture      String? @db.VarChar(255)
  last_active  BigInt

  @@map("customers")
}

model License {
  id         Int    @id @default(autoincrement())
  content    String
  updated_at BigInt

  products Product[]

  @@map("licenses")
}

model Category {
  id         Int    @id @default(autoincrement())
  name       String @db.VarChar(100)
  slug       String @db.VarChar(100) @unique
  created_at BigInt

  products Product[]

  @@map("categories")
}

enum PriceType {
  paid
  free

  @@map("price_type")
}

model Product {
  id            String    @id @default(uuid(7)) @db.Uuid
  category_id   Int
  admin_id      String    @db.VarChar(255)
  owner_id      Int
  license_id    Int
  name          String    @db.VarChar(150)
  slug          String    @db.VarChar(150)
  description   String
  changelog     String?
  price_type    PriceType
  download_link String?   @db.VarChar(255)
  released_at   BigInt
  updated_at    BigInt

  admin    Admin    @relation(fields: [admin_id], references: [id])
  category Category @relation(fields: [category_id], references: [id])
  owner    Owner    @relation(fields: [owner_id], references: [id])
  license  License  @relation(fields: [license_id], references: [id])

  product_discounts ProductDiscount?
  product_coupons   ProductCoupon?
  product_images    ProductImage[]
  product_variants  ProductVariant[]

  @@map("products")
}

model ProductDiscount {
  id         String @id @default(uuid(7)) @db.Uuid
  product_id String @unique @db.Uuid
  discount   String @db.VarChar(4)
  expired_at BigInt

  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@map("product_discounts")
}

model ProductCoupon {
  id         String @id @default(uuid(7)) @db.Uuid
  product_id String @unique @db.Uuid
  code       String @db.VarChar(150)
  discount   String @db.VarChar(4)
  expired_at BigInt

  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@map("product_coupons")
}

model ProductImage {
  id           String  @id @default(uuid(7)) @db.Uuid
  product_id   String  @db.Uuid
  url          String  @db.VarChar(255)
  is_thumbnail Boolean
  width        Int     @db.SmallInt
  height       Int     @db.SmallInt

  product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@map("product_images")
}

model ProductVariant {
  id            String  @id @default(uuid(7)) @db.Uuid
  product_id    String  @db.Uuid
  name          String  @db.VarChar(100)
  download_link String? @db.VarChar(255)

  product        Product        @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_prices ProductPrice[]

  @@map("product_variants")
}

model ProductPrice {
  id            String       @id @default(uuid(7)) @db.Uuid
  variant_id    String       @db.Uuid
  currency_code CurrencyCode
  price         Int

  variant ProductVariant @relation(fields: [variant_id], references: [id], onDelete: Cascade)

  @@map("product_prices")
}

enum Language {
  id
  en

  @@map("language")
}

model TermsOfService {
  id         Int    @id @default(autoincrement()) @db.SmallInt
  updated_at BigInt

  translations TermsOfServiceTranslation[]

  @@map("terms_of_service")
}

model TermsOfServiceTranslation {
  id                  Int      @id @default(autoincrement()) @db.SmallInt
  terms_of_service_id Int      @db.SmallInt
  language            Language
  content             String

  terms_of_service TermsOfService @relation(fields: [terms_of_service_id], references: [id], onDelete: Cascade)

  @@map("terms_of_service_translations")
}

model PrivacyPolicy {
  id         Int    @id @default(autoincrement()) @db.SmallInt
  updated_at BigInt

  translations PrivacyPolicyTranslation[]

  @@map("privacy_policy")
}

model PrivacyPolicyTranslation {
  id                Int      @id @default(autoincrement()) @db.SmallInt
  privacy_policy_id Int      @db.SmallInt
  language          Language
  content           String

  privacy_policy PrivacyPolicy @relation(fields: [privacy_policy_id], references: [id], onDelete: Cascade)

  @@map("privacy_policy_translations")
}

model AboutUs {
  id Int @id @default(autoincrement()) @db.SmallInt

  translations AboutUsTranslation[]

  @@map("about_us")
}

model AboutUsTranslation {
  id          Int      @id @default(autoincrement()) @db.SmallInt
  about_us_id Int      @db.SmallInt
  language    Language
  content     String

  about_us AboutUs @relation(fields: [about_us_id], references: [id], onDelete: Cascade)

  @@map("about_us_translations")
}

model Faq {
  id         Int    @id @default(autoincrement())
  created_at BigInt

  translations FaqTranslation[]

  @@map("faqs")
}

model FaqTranslation {
  id       Int      @id @default(autoincrement())
  faq_id   Int
  language Language
  title    String   @db.VarChar(150)
  content  String

  faq Faq @relation(fields: [faq_id], references: [id], onDelete: Cascade)

  @@map("faq_translations")
}
